# -*- coding: utf-8 -*-
"""cv2 tutorials.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14zTsUY3ikkGyA0FvKNK6Lw7WsM4ozmiJ
"""

import numpy as np
import cv2
import matplotlib.pyplot as plt

image_without_alpha = cv2.imread('tech.png',1)
image_grapscale = cv2.imread('tech.png',0)
image_alpha = cv2.imread('tech.png',-1)

plt.imshow(image_without_alpha)
plt.show()
plt.imshow(image_grapscale)
plt.show()
plt.imshow(image_alpha)
plt.show()

print(image_without_alpha.shape)
image_rgb = cv2.cvtColor(image_without_alpha,cv2.COLOR_BGR2RGB)
red_image = image_without_alpha[2]
plt.imshow(image_rgb)
plt.show()

m = np.array([[11,2,34],[232,1,42],[42,1,2]])
print(m)
print(m[:2,:0])

(R,G,B) = image_rgb[100,100]
print(R,G,B)

cropped_image = image_rgb[100:300,200:300]
plt.imshow(cropped_image)
plt.show()

from PIL.Image import new
resize_img = cv2.resize(image_rgb,(200,200))
plt.imshow(resize_img)
plt.show()
(h,w,d) = image_rgb.shape

aspect_ratio = h/w
new_width = 200
new_height = int(aspect_ratio*200)
print((new_width,new_height))
resize_img2 = cv2.resize(image_rgb,(new_width,new_height))
plt.imshow(resize_img2)
plt.show()

!pip install imutils

import imutils
resize_img3 = imutils.resize(image_rgb,width=300)
plt.imshow(resize_img3)
plt.show()

# // is for integer math opertaion (division)
center = (w // 2, h //2)
matrix = cv2.getRotationMatrix2D(center,-45,1)
rotated = cv2.warpAffine(image_rgb,matrix,(w,h))
plt.imshow(rotated)
plt.show()

rotated2 = imutils.rotate(image_rgb,-45)
plt.imshow(rotated2)
plt.show()

rotated3 = imutils.rotate_bound(image_rgb,45)
plt.imshow(rotated3)
plt.show()

# apply a Gaussian blur with a 11x11 kernel to the image to smooth it,
# useful when reducing high frequency noise
blurred = cv2.GaussianBlur(image_rgb, (11, 11), 0)
plt.imshow(blurred)
plt.show()

copy_img = image_rgb.copy()
cv2.rectangle(copy_img,(200,100),(600,400),(0, 0, 255), 5)
plt.imshow(copy_img)
plt.show()

copy_img2 = image_rgb.copy()
cv2.circle(copy_img2,(300,100),100,(0, 255, 0), -1) # -1 means fill circle
plt.imshow(copy_img2)
plt.show()

copy_img3 = image_rgb.copy()
cv2.line(copy_img3,(200,100),(600,400),(255, 200, 100), 5)
plt.imshow(copy_img3)
plt.show()

copy_img4 = image_rgb.copy()
cv2.putText(copy_img4,"OUTPUT Text",(200,100),cv2.FONT_HERSHEY_SIMPLEX,4,(0, 0, 255), 5) # scale factor
plt.imshow(copy_img4)
plt.show()